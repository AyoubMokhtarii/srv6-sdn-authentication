syntax = "proto3";

/* Define package */
package pymerang;

/* Import status codes */
import "pymerang/status_codes.proto";


/* RPC methods implementing a procedure to connect a device to a controller */

service Pymerang {
  // Register a device
  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceReply) {}
  // Update device registration
  rpc UpdateTunnelMode(RegisterDeviceRequest) returns (RegisterDeviceReply) {}
  // Unregister device registration
  rpc UnregisterDevice(RegisterDeviceRequest) returns (RegisterDeviceReply) {}
}

/* Message representing a feature supported by a device */
message Feature {
  string name = 1;
  uint32 port = 2;
}

/* Authentication data */
message AuthData {
  string token = 1;
}

/* Message representing a device */
message Device {
    string id = 1;
    repeated Feature features = 2;
}

/* Tunnel Mode */
enum TunnelMode {
    no_tunnel = 0;
    vxlan = 1;
    etherws = 2;
}

/* Tunnel Info */
message TunnelInfo {
    TunnelMode tunnel_mode = 1;
    string device_id = 2;
    string device_vtep_ip = 3;
    string controller_vtep_ip = 4;
    uint32 vtep_mask = 5;
    string device_external_ip = 6;
    uint32 device_external_port = 7;
    uint32 vni = 8;
    string device_vtep_mac = 9;
    string controller_vtep_mac = 10;
    uint32 tenantid = 11;
    uint32 vxlan_port = 12;
}

/* Interface */
message Interface {
    string name = 1;
    string mac_addr = 2;
    repeated string ipv4_addrs = 3;
    repeated string ipv6_addrs = 4;
    repeated string ext_ipv4_addrs = 5;
    repeated string ext_ipv6_addrs = 6;
}

/* RegisterDevice request message */
message RegisterDeviceRequest {
  Device device = 1;
  AuthData auth_data = 2;
  TunnelInfo tunnel_info = 3;
  string tunnel_mode = 4;
  string nat_type = 5;
  repeated Interface interfaces = 6;
}

/* Reports the outcome of a gRPC request command */
message RegisterDeviceReply {
  StatusCode status = 1;
  TunnelInfo tunnel_info = 2;
  uint32 vxlan_port = 3;
}